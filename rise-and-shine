#!/bin/sh
# MPD alarm clock.
#   Copyright Â© 2010 Paul Kishimoto <mail@paul.kishimoto.name>
#   Made available under the GPLv3 (http://www.gnu.org/licenses/gpl-3.0.html)
#
# Requires the Ubuntu packages 'mpc' and 'pulseaudio-utils'.
#
# To use, edit MPD_HOST to indicate which MPD instance to control. See the
# 'mpc' manpage for details. Then run this script with two arguments: an hour
# (0-23) and minute (0-59). For example:
#   $ rise-and-shine 16 30
# ...sets the alarm (e.g. for 4:30 PM).
#
# The script adds itself to your crontab. At the specified time, it lowers the
# volume of your default PulseAudio output to mute. It begins playing whatever
# is in your MPD playlist. Then, it slowly raises the volume back to its
# original level.
#
# You can set the RAMP_TIME (in seconds) for a more abrupt or gradual wakeup.
#
# Because of the format of crontab entries, you can also disable the alarm
# using:
#  $ rise-and-shire 0 \#0

start_alarm () {
  # settings
  MPD_HOST=HusbwomanGNT@khaeru-storage
  RAMP_TIME=10
  MPC="mpc --quiet --host $MPD_HOST"

  # retrieve current PulseAudio volume
  PA_OUTPUT=`pacmd dump | grep set-default-sink | cut -d " " -f 2`
  VOLUME=`pacmd dump | grep "set-sink-volume $PA_OUTPUT" | cut -d " " -f 3`
  ## retrieve current MPD volume
  #VOLUME=`$MPC volume | sed "s/volume: \([0-9]*\)%/\\1/"`
  # steps from zero to target volume
  VOLSTEP=$((VOLUME / RAMP_TIME))

  # mute PulseAudio output
  pacmd set-sink-volume 0 0x0 >/dev/null
  ## mute MPD
  #$MPC volume 0

  # start playing
  $MPC play

  # gradually increase volume over $RAMP_TIME seconds...
  for i in `seq 0 $VOLSTEP $VOLUME`
  do
    #echo $i
    # ...using PulseAudio.
    pacmd set-sink-volume 0 `printf "0x%X" $i` >/dev/null
    ## ...using MPD.
    #$MPC volume $i
    sleep 1
  done
}


set_alarm () {
  # name of the current script
  SCRIPT=$(which $0)
  # sed command to change the time of the alarm
  NEW_LINE="$2 $1 \* \* \* $SCRIPT"
  SED_CMD="s@^.*${SCRIPT}\$@${NEW_LINE}@"
  # edit the crontab
  crontab -l | sed --expression="${SED_CMD}" | crontab -
}


case $# in
0)
  start_alarm
  ;;
2)
  set_alarm $1 $2
  ;;
*)
  echo $0 ": invalid number of options."
  ;;
esac
