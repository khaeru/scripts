#!/usr/bin/env python
""" Generate phoenetic passwords

Edit the variables 'length', 'count' and 'show_passwords' below to your liking.

Running this script will display phoenetic representations of some
random passwords.
"""
import curses
import random


length = 8
count = 20
show_passwords = False


# character sets
lower_latin = {
  'a': 'alfa',
  'b': 'bravo',
  'c': 'charlie',
  'd': 'delta',
  'e': 'echo',
  'f': 'foxtrot',
  'g': 'golf',
  'h': 'hotel',
  'i': 'india',
  'j': 'juliet',
  'k': 'kilo',
  'l': 'lima',
  'm': 'mike',
  'n': 'november',
  'o': 'oscar',
  'p': 'papa',
  'q': 'quebec',
  'r': 'romeo',
  's': 'sierra',
  't': 'tango',
  'u': 'uniform',
  'v': 'victor',
  'w': 'whiskey',
  'x': 'x-ray',
  'y': 'yankee',
  'z': 'zulu',
  }


upper_latin = dict([(k.upper(), v.upper()) for (k, v) in lower_latin.iteritems()])


digits = {
  '0': 'zero',
  '1': 'one',
  '2': 'two',
  '3': 'three',
  '4': 'four',
  '5': 'five',
  '6': 'six',
  '7': 'seven',
  '8': 'eight',
  '9': 'nine',
  }


symbols = {
  '~': 'tilde',
  '@': 'at',
  '#': 'pound',
  '$': 'dollar',
  '%': 'percent',
  '^': 'caret',
  '&': 'ampersand',
  '*': 'asterisk',
  '_': 'underscore',
  '-': 'minus',
  '+': 'plus',
  '=': 'equals',
  '|': 'bar',
  '.': 'period',
  ',': 'comma',
  }


defaults = {}
[defaults.update(set) for set in (lower_latin, upper_latin, digits, symbols,)]


def generate_passwords(window):
    buffer = [random.randint(0, len(defaults) - 1) for i in range(length * count)]
    chars = defaults.keys()
    words = defaults.values()
    for c in range(count):
        pw = ''
        phonetic = ''
        for l in range(length):
            char = buffer.pop()
            pw += chars[char]
            phonetic += words[char] + ' - '
        if show_passwords:
            output = '%s: ' % pw
        else:
            output = ''
        window.addstr(c, 0, output + phonetic[0:-3])


if __name__ == '__main__':
    import curses
    win = curses.initscr()
    curses.noecho()
    try:
        generate_passwords(win)
        win.refresh()
        while True:
            curses.napms(1000)
    except KeyboardInterrupt:
        curses.echo()
        curses.endwin()
